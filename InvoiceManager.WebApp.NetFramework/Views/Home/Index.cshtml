@using InvoiceManager.WebApp.NetFramework.Models.Domains

@model IEnumerable<Invoice>

@{
    ViewBag.Title = "Faktury";
}

<main>

	<h1 class="mb-3">Faktury</h1>

	@*onclick - adres akcji - wywołanie akcji z kontrolera, przy dodawaniu faktury wyświetla sie inny widok*@
	@*window.location.href - kod przekierowujący na akcję,
		musi to być dodane w miejscach, gdzie nie ma przekierowania linka tak jak np w znaczniku <a href="">
		jeśli w środku jest cudzysłów, to na zewnątrz powinny być apostrofy*@
	<button class="btn btn-primary mb-3"
			onclick='window.location.href="@Url.Action("Invoice", "Home")"'>
		Dodaj
	</button>

	@if (Model is not null && Model.Any())
    {
	<table class="table table-hover table-striped mt-3 mb-5">
		<thead>
			<tr>
				<th scope="col">Tytuł</th>
				<th scope="col">Klient</th>
				<th scope="col">Wartość</th>
				<th scope="col">Data utworzenia faktury</th>
				<th scope="col">Termin płatności</th>
				<th scope="col"></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var invoice in Model)
                {
			<tr>
				<td>
					@*INFO - dodanie parametru do akcji w kontrolerze za pomocą nowego obiektu anonimowego*@
					<a class="fw-bold" href="@Url.Action("Invoice", "Home", new { invoiceId = invoice.Id })">@invoice.Title</a>

					@*to samo, tylko przy użyciu helpera z Html*@
					@*@Html.ActionLink(@invoice.Title, "Invoice", "Home", new { id = invoice.Id }, null)*@
				</td>
				<td>@invoice.Client.Name</td>
				<td>@invoice.Value zł</td>
				<td>@invoice.CreatedDate.ToString("dd-MM-yyyy")</td>
				<td>@invoice.PaymentDate.ToString("dd-MM-yyyy")</td>
				<td>
					@*INFO - JavaScript + Ajax na onclick, żeby wywołać jakąś akcję z kontrolera i nie przeładowywać całej strony*@
					@*INFO - parametr this - przekazanie całego obiektu, w tym przypadku będzie to button*@
					<button class="btn btn-danger btn-sm"
							onclick="deleteInvoice('@invoice.Id', this)">
						Usuń
					</button>
				</td>
			</tr>
                }
		</tbody>
	</table>
    }
    else
    {
	<p class="alert alert-info mt-4 mb-4">Brak faktur do wyświetlenia</p>
    }
</main>

@section Scripts
{
	<script type="text/javascript">

        //w javascripcie nie określa się typu parametrów, wpisuje się tylko nazwy
        function deleteInvoice(id, btn) {
            if (!confirm("Czy na pewno chcesz usunąć fakturę?")) {
                return;
            }

            // jQuery + ajax, w nawiasach {} przekazuje sie różne wartośći
			$.ajax({
				// określenie typu akcji w kontrolerze
				type: 'POST',

				// ustawienie linku, który będzie wykonany, tutaj akcja Delete z kontrolera Home
				url: "@Url.Action("Delete", "Home")",

				// parametry przekazywane do akcji w kontrolerze, nazwa invoiceId musi być taka sama jak nazwa parametru akcji
				data: { invoiceId: id },

				// określenie co ma się wydarzyć, jeśli wszystko pójdzie zgodnie z oczekiwaniami
				// parametr data - to jest wartość zwracana przez wywołaną akcję, w tym wypadku jest to Json
                success: function (data) {
                    if (data.Success) {
                        // usuwanie wybranego rzędu (faktury) z tabelki w html
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);
                    }
                    else {
                        alert(data.Message);
                    }
				},

				// jeżeli występują jakieś inne błędy w javaScripcie
                error: function (data) {
                    alert(data.Message);
				},

				// określenie typu zwracanego przez akcję
                dataType: 'json'
            });
        }
	</script>
}