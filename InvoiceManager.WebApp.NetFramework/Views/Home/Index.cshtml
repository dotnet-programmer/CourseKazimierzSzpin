@using InvoiceManager.WebApp.NetFramework.Models.Domains

@model IEnumerable<Invoice>

@{
    ViewBag.Title = "Faktury";
}

<main>

    <h1 class="mb-3">Faktury</h1>

    @*onclick - adres akcji - wywołanie akcji z kontrolera, przy dodawaniu faktury wyświetla sie inny widok*@
    @*window.location.href - kod przekierowujący na akcję, 
        musi to być dodane w miejscach, gdzie nie ma przekierowania linka tak jak np w znaczniku <a href="">
        jeśli w środku jest cudzysłów, to na zewnątrz powinny być apostrofy*@
    <button class="btn btn-primary mb-3" 
            onclick='window.location.href="@Url.Action("Invoice", "Home")"'>
            Dodaj
    </button>

    @if (Model is not null && Model.Any())
    {
        <table class="table table-hover table-striped mt-3 mb-5">
            <thead>
                <tr>
                    <th scope="col">Tytuł</th>
                    <th scope="col">Klient</th>
                    <th scope="col">Wartość</th>
                    <th scope="col">Data utworzenia faktury</th>
                    <th scope="col">Termin płatności</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var invoice in Model)
                {
                    <tr>
                        <td>
                            @*INFO - dodanie parametru do akcji w kontrolerze za pomocą nowego obiektu anonimowego*@
                            <a class="fw-bold" href="@Url.Action("Invoice", "Home", new { invoiceId = invoice.Id })">@invoice.Title</a>

                            @*to samo, tylko przy użyciu helpera z Html*@
                            @*@Html.ActionLink(@invoice.Title, "Invoice", "Home", new { id = invoice.Id }, null)*@
                        </td>
                        <td>@invoice.Client.Name</td>
                        <td>@invoice.Value zł</td>
                        <td>@invoice.CreatedDate.ToString("dd-MM-yyyy")</td>
                        <td>@invoice.PaymentDate.ToString("dd-MM-yyyy")</td>
                        <td>
                            @*INFO - JavaScript + Ajax na onclick, żeby nie przeładowywać strony*@
                            @*INFO - parametr this - przekazanie całego obiektu, w tym przypadku będzie to button*@
                            <button class="btn btn-danger btn-sm"
                                    onclick="deleteInvoice('@invoice.Id', this)">
                                Usuń
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="alert alert-info mt-4 mb-4">Brak faktur do wyświetlenia</p>
    }

</main>

@section Scripts
{
    <script type="text/javascript">

        //w javascripcie nie określa się typu parametrów, wpisuje się tylko nazwy
        function deleteInvoice(id, btn) {
            if (!confirm("Czy na pewno chcesz usunąć fakturę?")) {
                return;
            }

            // jQuery + ajax, w nawiasach {} przekazuje sie różne wartośći
            $.ajax({
                type: 'POST',
                url: "@Url.Action("Delete", "Home")",
                data: { invoiceId: id },
                success: function (data) {
                    if (data.Success) {
                        // usuwanie z html
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);
                    }
                    else {
                        alert(data.Message);
                    }
                },
                error: function (data) {
                    alert(data.Message);
                },
                dataType: 'json'
            });
        }

    </script>
}