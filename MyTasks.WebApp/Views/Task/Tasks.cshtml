@model TasksViewModel

@{
    ViewData["Title"] = "Zadania";
}

<h1 class="mb-4">Moje zadania</h1>

@* formularz filtrowania *@
@* zrobiony jako zwykły folmularz HTML a nie używając C# @Html.BeginForm bo nie będzie odświeżania strony tylko poniższej tabelki za pomocą ajaxa *@
<form id="filterForm" class="row gy-2 gx-3 align-items-center">
    <div class="col-auto form-floating">
        @Html.TextBoxFor(x => x.FilterTasks.Title, new { @class = "form-control", placeholder = "t" })
        @Html.LabelFor(x => x.FilterTasks.Title)
    </div>
    <div class="col-auto form-floating">
        @Html.DropDownListFor(
        x => x.FilterTasks.CategoryId,
                new SelectList(Model.Categories, "CategoryId", "Name"),
                "-- wybierz kategorię --",
                new { @class = "form-select" })
        @Html.LabelFor(x => x.FilterTasks.CategoryId)
    </div>
    <div class="col-auto">
        <div class="form-check">
            @Html.CheckBoxFor(x => x.FilterTasks.IsExecuted, new { @class = "form-check-input" })
            @Html.LabelFor(x => x.FilterTasks.IsExecuted, new { @class = "form-check-label" })
        </div>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Szukaj</button>
    </div>
</form>

@* tabela z zadaniami *@
@* INFO - zrobione jako widok częściowy bo tylko ta część jest odświeżana po kliknięciu Submit *@
<div>
    @await Html.PartialAsync("_TasksTable", Model.Tasks)
</div>

@section Scripts
{
    <script src="~/js/task-actions.js"></script>

    <script type="text/javascript">

        // po załadowaniu strony wywołaj funkcję, która dla formularza o Id=filterForm podłącza pod zdarzenie submit funkcję, w której wykonywany jest ajax
        $(document).ready( function () {
            handleSubmit('#filterForm', '#tasksTable', '@Url.Action("Tasks", "Task")');
        });

        function deleteTask(taskId, btn) {
            deleteOrFinishTask(true, taskId, btn, '@Url.Action("DeleteTask", "Task")');
        }

        function finishTask(taskId, btn) {
            deleteOrFinishTask(false, taskId, btn, '@Url.Action("FinishTask", "Task")');
        }

    </script>
}