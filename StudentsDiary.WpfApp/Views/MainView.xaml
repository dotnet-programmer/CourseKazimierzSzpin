<!--
	INFO - Wiązanie widoku z ViewModel w czasie projektowania - wyświetlanie podpowiedzi IntelliSense:
	1. dodać: xmlns do pliku ViewModel
	2. dodać: d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
-->

<!--
	INFO - MahApps 5 - ustawienie normalnego tekstu na pasku tytułowym okna (bez capslocka):
	TitleCharacterCasing="Normal"
-->

<!--
	INFO - MahApps 6 - dodanie okien dialogowych zgodnych z MVVM
	1. dodać: xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
	2. dodać: Dialog:DialogParticipation.Register="{Binding}"
-->

<mah:MetroWindow x:Class="StudentsDiary.WpfApp.Views.MainWindow"
				 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
				 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
				 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				 xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
				 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
				 xmlns:behaviors="clr-namespace:StudentsDiary.WpfApp.Models"
				 xmlns:viewmodels="clr-namespace:StudentsDiary.WpfApp.ViewModels"
				 Dialog:DialogParticipation.Register="{Binding}"
				 d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
				 mc:Ignorable="d"
				 Title="Dziennik ucznia"
				 Height="450"
				 Width="800"
				 MinHeight="150"
				 MinWidth="570"
				 WindowStartupLocation="CenterScreen"
				 TitleCharacterCasing="Normal">

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding LoadedWindowCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<!--
		INFO - MVVM Zamykanie okna 5 - użycie Keystroke Behavior
	-->
	<i:Interaction.Behaviors>
		<behaviors:KeystrokeBehavior PressedKey="Esc" />
	</i:Interaction.Behaviors>

	<!--
		INFO - MahApps 2 - ustawienie Template dla ikony okna
	-->
	<mah:MetroWindow.IconTemplate>
		<DataTemplate>
			<iconPacks:PackIconUnicons Kind="BatteryBolt"
									   Width="32"
									   Height="32"
									   HorizontalAlignment="Center"
									   VerticalAlignment="Center"
									   Margin="4"
									   Foreground="{DynamicResource MahApps.Brushes.IdealForeground}" />
		</DataTemplate>
	</mah:MetroWindow.IconTemplate>

	<!--
		INFO - MahApps 3 - ustawienie dodatkowego przycisku po lewej stronie okna
	-->
	<mah:MetroWindow.LeftWindowCommands>
		<mah:WindowCommands>
			<Button Command="{Binding LeftWindowCommand}"
					ToolTip="Open up the GitHub site">
				<iconPacks:PackIconModern Width="22"
										  Height="22"
										  Kind="SocialGithubOctocat" />
			</Button>
		</mah:WindowCommands>
	</mah:MetroWindow.LeftWindowCommands>

	<!--
		INFO - MahApps 4 - ustawienie dodatkowego przycisku po prawej stronie okna
	-->
	<mah:MetroWindow.RightWindowCommands>
		<mah:WindowCommands>
			<Button Command="{Binding RightWindowCommand}"
					Content="Deploy CupCakes">
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<iconPacks:PackIconModern Width="22"
													  Height="22"
													  VerticalAlignment="Center"
													  Kind="FoodCupcake" />
							<TextBlock Margin="4 0 0 0"
									   VerticalAlignment="Center"
									   Text="{Binding}" />
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>
		</mah:WindowCommands>
	</mah:MetroWindow.RightWindowCommands>

	<!--
		INFO - MVVM Wiązanie DataContext 1 - bezpośrednio w oknie
	-->
	<!--<mah:MetroWindow.DataContext>
		<viewmodels:MainViewModel />
	</mah:MetroWindow.DataContext>-->

	<!--
		INFO - Definicja stylu 4 - zasób dla całego okna
	-->
	<mah:MetroWindow.Resources>
		<Style TargetType="{x:Type Button}">
			<Setter Property="FontWeight"
					Value="Bold" />
		</Style>

		<Style TargetType="{x:Type Button}"
			   x:Key="BtnRefreshStyle">
			<Setter Property="Background"
					Value="CornflowerBlue" />
		</Style>
	</mah:MetroWindow.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>

		<StackPanel Grid.Row="0"
					Orientation="Horizontal">

			<!--
				INFO - Definicja stylu 3 - zasób elementu nadrzędnego; wszystkie elementy podrzędne odziedziczą ten styl
			-->
			<StackPanel.Resources>
				<Style TargetType="{x:Type Button}">
					<Setter Property="Margin"
							Value="10" />
				</Style>
			</StackPanel.Resources>

			<!--
				INFO - Definicja stylu 1 - bezpośrednio właściwości kontrolki
			-->
			<Button Content="Dodaj"
					FontWeight="Bold"
					Command="{Binding AddStudentCommand}" />

			<!--
				INFO - Definicja stylu 2 - zasób elementu
			-->
			<Button Content="Edytuj"
					Command="{Binding EditStudentCommand}"
					CommandParameter="{Binding SelectedStudent}">
				<Button.Resources>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Background"
								Value="Goldenrod" />
					</Style>
				</Button.Resources>
			</Button>

			<Button Content="Usuń"
					Command="{Binding DeleteStudentCommand}" />

			<ComboBox Width="150"
					  SelectedValuePath="Id"
					  DisplayMemberPath="Name"
					  ItemsSource="{Binding Groups}"
					  SelectedValue="{Binding SelectedGroupId}" />

			<!--
				INFO - Definicja stylu 6 - przypisanie stylu po zdefiniowanym kluczu
			-->
			<Button Content="Odśwież"
					Style="{StaticResource BtnRefreshStyle}"
					Command="{Binding RefreshStudentsCommand}" />

			<!--
				INFO - Mozliwość zagnieżdżania w kontrolce innych kontrolek
			-->
			<Button>
				<Button.Content>
					<StackPanel Orientation="Horizontal">
						<Image Width="100"
							   Source="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/225px-Google_2015_logo.svg.png" />
						<Label Content="Test" />
					</StackPanel>
				</Button.Content>
			</Button>

			<Button Content="Ustawienia"
					Height="25"
					Width="100"
					Margin="5"
					Command="{Binding ShowSettingsCommand}" />
		</StackPanel>

		<DataGrid Grid.Row="1"
				  x:Name="MainDataGrid"
				  CanUserAddRows="False"
				  IsReadOnly="True"
				  SelectionMode="Single"
				  AutoGenerateColumns="False"
				  ItemsSource="{Binding Students}"
				  SelectedItem="{Binding SelectedStudent}">
			<DataGrid.Columns>
				<DataGridTextColumn Header="Id"
									Visibility="Hidden"
									Binding="{Binding Id}" />
				<DataGridTextColumn Header="Imię"
									Binding="{Binding FirstName}" />
				<DataGridTextColumn Header="Nazwisko"
									Binding="{Binding LastName}" />
				<DataGridTextColumn Header="Uwagi"
									Binding="{Binding Comments}" />
				<DataGridTextColumn Header="Matematyka"
									Binding="{Binding Math}" />
				<DataGridTextColumn Header="Technologia"
									Binding="{Binding Technology}" />
				<DataGridTextColumn Header="Fizyka"
									Binding="{Binding Physics}" />
				<DataGridTextColumn Header="J. polski"
									Binding="{Binding PolishLang}" />
				<DataGridTextColumn Header="J. obcy"
									Binding="{Binding ForeignLang}" />
				<DataGridCheckBoxColumn Header="Zaj. dodatkowe"
										Binding="{Binding Activities}" />
				<DataGridTextColumn Header="Grupa"
									Binding="{Binding Group.Name}" />
			</DataGrid.Columns>

			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Loaded">
					<i:InvokeCommandAction Command="{Binding SetColumnsWidthCommand}"
										   CommandParameter="{Binding ElementName=MainDataGrid}" />
				</i:EventTrigger>
				<i:EventTrigger EventName="MouseDoubleClick">
					<i:InvokeCommandAction Command="{Binding GridDoubleClickCommand}"
										   CommandParameter="{Binding SelectedStudent}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</DataGrid>
	</Grid>
</mah:MetroWindow>