@using SendEmail.WebApp.NetFramework.Models.Domains

@model IEnumerable<EmailSettings>

@{
	ViewBag.Title = "Ustawienia";
}

@*jak jest 0 lub 1 to otwiera sie widok edycji danych - czyli formularz z polami
ale jak jest 2 i wiecej, to pojawia sie u góry comboBox z listą konfiguracji*@

@if (Model is not null && Model.Any())
{
	<div class="row mb-3">
		<div class="col-lg-3 text-lg-end">
			@*@Html.LabelFor(x => x.)*@
		</div>
		<div class="col-lg-8">
			@*@Html.DropDownListFor(x => x.Invoice.ClientId, new SelectList(Model, nameof(EmailSettings.EmailSettingsId), nameof(EmailSettings.SenderEmail)), "-- Wybierz email --", new { @class = "form-control" })
			@Html.ValidationMessageFor(x => x.SenderName)*@
		</div>
	</div>
}

@Html.Partial("Settings", ) 

else
{
	@using (Html.BeginForm("", ""))
	{
		@Html.AntiForgeryToken()

		@Html.ValidationSummary()

		@Html.HiddenFor(x => x.UserId)

		<div class="row mb-3">
			<div class="col-lg-3 text-lg-end">
				@Html.LabelFor(x => x.SenderName)
			</div>
			<div class="col-lg-8">
				@Html.TextBoxFor(x => x.SenderName, new { @class = "form-control", autofocus = "autofocus" })
				@Html.ValidationMessageFor(x => x.SenderName)
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-lg-3 text-lg-end">
				@Html.LabelFor(x => x.SenderEmail)
			</div>
			<div class="col-lg-8">
				@Html.TextBoxFor(x => x.SenderEmail, new { @class = "form-control" })
				@Html.ValidationMessageFor(x => x.SenderEmail)
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-lg-3 text-lg-end">
				@Html.LabelFor(x => x.SenderEmailPassword)
			</div>
			<div class="col-lg-8">
				@Html.TextBoxFor(x => x.SenderEmailPassword, new { @class = "form-control" })
				@Html.ValidationMessageFor(x => x.SenderEmailPassword)
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-lg-3 text-lg-end">
				@Html.LabelFor(x => x.HostSmtp)
			</div>
			<div class="col-lg-8">
				@Html.TextBoxFor(x => x.HostSmtp, new { @class = "form-control" })
				@Html.ValidationMessageFor(x => x.HostSmtp)
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-lg-3 text-lg-end">
				@Html.LabelFor(x => x.EnableSsl)
			</div>
			<div class="col-lg-8">
				@Html.TextBoxFor(x => x.EnableSsl, new { @class = "form-control" })
				@Html.ValidationMessageFor(x => x.EnableSsl)
			</div>
		</div>

		<div class="row mb-3">
			<div class="col-lg-3 text-lg-end">
				@Html.LabelFor(x => x.Port)
			</div>
			<div class="col-lg-8">
				@Html.TextBoxFor(x => x.Port, new { @class = "form-control" })
				@Html.ValidationMessageFor(x => x.Port)
			</div>
		</div>

		<div class="row mb-3">
			<button type="submit" class="col-lg-1 offset-lg-6 btn btn-primary btn-lg mb-5">Zapisz</button>
		</div>
	}
}